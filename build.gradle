plugins {
	alias libs.plugins.babric.loom
	id 'java'
}


loom {
	gluedMinecraftJar()
	noIntermediateMappings()
	var btaVersion = libs.versions.bta.get()
	customMinecraftManifest.set("https://github.com/Turnip-Labs/bta-manifest-repo/releases/download/v$btaVersion/${btaVersion}.json")
	accessWidenerPath = file("src/main/resources/aether.accesswidener")
}

repositories {
	flatDir { // DO NOT DELETE THIS, THIS ALLOWS GRADLE TO *OPTIONALLY* LOAD JARS LOCALLY, THIS HELPS TO FIX SOME PROBLEMATIC DEPENDENCIES
		dirs "./dependencies"
	}
	mavenCentral()
	maven { url = "https://jitpack.io" }
	maven {
		name = 'Babric'
		url = 'https://maven.glass-launcher.net/babric'
	}
	maven {
		name = 'Fabric'
		url = 'https://maven.fabricmc.net/'
	}
	ivy {
		url = "https://github.com/Better-than-Adventure"
		patternLayout {
			artifact "[organisation]/releases/download/v[revision]/[module].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/Turnip-Labs"
		patternLayout {
			artifact "[organisation]/releases/download/v[revision]/[module]-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/Turnip-Labs"
		patternLayout {
			artifact "[organisation]/releases/download/[revision]/[module]-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/Turnip-Labs"
		patternLayout {
			artifact "[organisation]/releases/download/[revision]/[module]-bta-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://piston-data.mojang.com"
		patternLayout {
			artifact "v1/[organisation]/[revision]/[module].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/MartinSVK12"
		patternLayout {
			artifact "[organisation]/releases/download/[revision]/[module]-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/UselessBullets"
		patternLayout {
			artifact "[organisation]/releases/download/r[revision]/[module]-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/UselessBullets"
		patternLayout {
			artifact "[organisation]/releases/download/v[revision]/[module]-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/MartinSVK12"
		patternLayout {
			artifact "[organisation]/releases/download/1.3.1/[module]-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
}

dependencies {
	minecraft libs.bta
	mappings loom.layered() {}

	modRuntimeOnly libs.client // https://piston-data.mojang.com/v1/objects/43db9b498cb67058d2e12d394e6507722e71bb45/client.jar
	modImplementation libs.fabric.loader

	modImplementation libs.halplibe
	modImplementation libs.terrainapi

	modImplementation libs.modmenu
	modImplementation libs.dragonfly
	modImplementation libs.bundles.catalyst

	include(implementation(annotationProcessor(libs.mixinextras.get())))

	implementation libs.bundles.logging
	implementation libs.apache.commons.lang

	implementation libs.guava
	implementation libs.gson

//	modImplementation "com.github.Turnip-Labs:bta-halplibe:${project.halplibe_version}"
//	modImplementation "TerrainAPI:terrainapi:${project.terrain_api_version}"
//	modImplementation "DragonFly:dragonfly:${project.dragonfly_version}"
//
//	modImplementation "ModMenu:ModMenu:2.0.3"
}

var javaVersion = 8

java {
	sourceCompatibility = JavaVersion.toVersion(javaVersion)
	targetCompatibility = JavaVersion.toVersion(javaVersion)
	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	options.release.set javaVersion
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

processResources {
	inputs.property "version", version

	filesMatching("fabric.mod.json") {
		expand "version": version
	}
}